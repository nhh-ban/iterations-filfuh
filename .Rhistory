# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
configs <-
read_yaml("vegvesen_configs.yml")
View(configs)
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df()
#### 3: Testing metadata
source("functions/data_tests.r")
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
#### 1: Beginning of script
# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
# The URL we will use is stored below:
configs <-
read_yaml("vegvesen_configs.yml")
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
# Let's try submitting the query:
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
#### 2: Transforming metadata
source("functions/data_transformations.r")
View(configs)
View(configs)
View(configs)
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
#### 1: Beginning of script
# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
# The URL we will use is stored below:
configs <-
read_yaml("vegvesen_configs.yml")
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
# Let's try submitting the query:
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
#### 2: Transforming metadata
source("functions/data_transformations.r")
stations_metadata[[1]] |>
map(as_tibble)
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind()
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = ""))
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = ""))  |>
mutate(latestData = as_datetime(latestData, tz = "Europe/Berlin"))  |>
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
transform_metadata_to_df <-
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "Europe/Berlin"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
source("functions/data_transformations.r")
func(transform_metadata_to_df){
func(transform_metadata_to_df){
{stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "Europe/Berlin"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)}
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
#### 1: Beginning of script
# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
# The URL we will use is stored below:
configs <-
read_yaml("vegvesen_configs.yml")
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
# Let's try submitting the query:
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
{stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "Europe/Berlin"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)}
source("functions/data_transformations.r")
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
#### 1: Beginning of script
# Load function for posting GQL-queries and retrieving data:
source("functions/GQL_function.r")
# The URL we will use is stored below:
configs <-
read_yaml("vegvesen_configs.yml")
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
# Let's try submitting the query:
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
transform_metadata_to_df <-
function(metadata){
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "Europe/Berlin"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
}
source("functions/data_transformations.r")
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
rm(stations_metadata_df)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
transform_metadata_to_df <-
function(metadata){
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "UTC"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
}
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
#### 3: Testing metadata
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
transform_metadata_to_df <-
function(metadata){
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "UTC"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
}
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "UTC"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
transform_metadata_to_df <-
function(metadata){
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData, tz = "UTC"))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
}
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
transform_metadata_to_df <-
function(metadata){
stations_metadata[[1]] %>%
map(as_tibble) %>%
list_rbind() %>%
mutate(latestData = map_chr(latestData, 1, .default = ""))  %>%
mutate(latestData = as_datetime(latestData))  %>%
mutate(location = map(location, unlist)) |>
mutate(
lat = map_dbl(location, "latLon.lat"),
lon = map_dbl(location, "latLon.lon")
) %>%
select(-location)
}
View(stations_metadata_df)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
test_stations_metadata <-
function(df){
test_stations_metadata_colnames(df)
test_stations_metadata_coltypes(df)
test_stations_metadata_nmissing(df)
test_stations_metadata_nrows(df)
test_stations_metadata_latestdata_timezone(df)
to_iso8602 <-
function(date, offset){
iso8601(date+offset)
}
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
to_iso8601("2016-09-01 10:11:12"),0)
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
to_iso8601 <-
function(date, offset){
iso8601(date+offset)
}
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
offset(5)
to_iso8601(as_datetime("2016-09-01 10:11:12"),-5)
?days
}
iso8601(date+days(offset) %>%
paste0("Z")}
}
to_iso8601 <-
function(date, offset){
iso8601(date+days(offset)) %>%
paste0("Z")
}
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
to_iso8601(as_datetime("2016-09-01 10:11:12"),5)
to_iso8601(as_datetime("2016-09-01 10:11:12"),7)
to_iso8601(as_datetime("2016-09-01 10:11:12"),-6)
to_iso8601(as_datetime("2016-09-01 10:11:12"),-4)
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
source("functions/GQL_function.r")
configs <-
read_yaml("vegvesen_configs.yml")
View(configs)
gql_metadata_qry <- read_file("gql-queries/station_metadata.gql")
stations_metadata <-
GQL(
query=gql_metadata_qry,
.url = configs$vegvesen_url
)
View(configs)
View(stations_metadata)
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
View(stations_metadata_df)
View(stations_metadata_df)
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
vol_qry <-
function(id, from, to) {
query <- sprintf('{
trafficData(trafficRegistrationPointId: "%s") {
volume {
byHour(from: "%s", to: "%s") {
edges {
node {
from
to
total {
volumeNumbers {
volume
}
}
}
}
}
}
}
}', id, from, to)
return(query)
}
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
library(httr)
library(jsonlite)
library(ggplot2)
library(DescTools)
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(anytime)
library(readr)
library(yaml)
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
GQL(
vol_qry(
id=stations_metadata_df$id[1],
from=to_iso8601(stations_metadata_df$latestData[1],-4),
to=to_iso8601(stations_metadata_df$latestData[1],0)
),
.url = configs$vegvesen_url
)
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes(.) %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
?transformx_volumes
??transformx_volumes
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
library(yaml)
library(readr)
library(anytime)
library(lubridate)
library(rlang)
library(magrittr)
library(tidyverse)
library(DescTools)
library(ggplot2)
library(jsonlite)
